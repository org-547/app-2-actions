name: 'Image build/push'
description: 'Build and push of app back/front image'

inputs:
  initial:
    #type: string
    required: false
    default: 'no'
  app-component:
    #type: string 
    required: true
  container:
    #type: string
    required: true
  port:
    #type: string
    required: true
  docker-uname:
    required: true
  docker-token:
    required: true
    
outputs:
  image-tag: 
    description: "get new image-tag"
    value: ${{ steps.tagging.outputs.image-tag }}    

runs:
  using: "composite"

  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Debug Docker Username.
      run: echo "Docker username is '${{ inputs.docker-uname }}'"
      shell: bash

    - name: Set tag for docker image
      id: tagging
      shell: bash
      run: |
        if [ "${{ inputs.initial }}" == "yes" ]; then
          tag="first"
          echo "image-tag=first" >> $GITHUB_OUTPUT
        else  
          tag="${GITHUB_SHA::7}"
          echo "image-tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        fi

    - name: Tagging and build of docker image
      shell: bash
      run: |
        echo "It is: ${{ steps.tagging.outputs.image-tag }}"
        docker build -t ${{ inputs.docker-uname }}/${{ inputs.app-component }}:${{ steps.tagging.outputs.image-tag }} .
 
    - name: Test newly created build image
      shell: bash
      run: docker run --rm -d --name ${{inputs.container}} -p ${{inputs.port}}:${{inputs.port}} ${{inputs.docker-uname}}/${{inputs.app-component}}:${{ steps.tagging.outputs.image-tag }}  

    - name: Push image to DockerHub
      if  : success()
      shell: bash
      run : |
        docker login -u ${{ inputs.docker-uname }} -p ${{ inputs.docker-token }}
        docker push ${{ inputs.docker-uname }}/${{inputs.app-component}}:${{ steps.tagging.outputs.image-tag }}  
